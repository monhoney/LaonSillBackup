(1) 각 Layer의 property를 등록해야 한다.
 src/prop/layerPropDef.json 파일에 각 layer들의 property를 추가한다.
 추가 방법에 대해서는 src/prop/readme.txt 파일을 참고 한다.

(2) 모든 layer에는 다음과 같은 7개의 static function이 정의되어 있어야 한다.
 [FullyConncectedLayer.h] 

public:
    /****************************************************************************
     * layer callback functions 
     ****************************************************************************/
    static void* initLayer();
    static void destroyLayer(void* instancePtr);
    static void setInOutTensor(void* instancePtr, void* tensorPtr, bool isInput, int index);
    static bool allocLayerTensors(void* instancePtr);
    static void forwardTensor(void* instancePtr, int miniBatchIndex);
    static void backwardTensor(void* instancePtr);
    static void learnTensor(void* instancePtr);

  이것에 대한 구현체도 필요하다. network 속성은 SNPROP() 매크로를, layer 속성은 SLPROP(),
  SLPROP_BASE() 매크로를 이용하여 수정하도록 한다. 
  FullyConnectedLayer의 initLayer()의 예제는 다음과 같다:

 [FullyConnectedLayer_device.cu]

#include "PropMgmt.h"

              :
              :

template<typename Dtype>
void* FullyConnectedLayer<Dtype>::initLayer() {
    FullyConnectedLayer* fc = new FullyConnectedLayer<Dtype>(SLPROP(FullyConnected, name));
    return (void*)fc;
}

              :
              :

template void* FullyConnectedLayer<float>::initLayer();


